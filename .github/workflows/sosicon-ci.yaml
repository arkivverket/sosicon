---
name: Sosicon CI

on:
  push:
    branches-ignore:
      - master
    paths:
      - '**'
      - '.github/workflows/sosicon-ci.yaml'

jobs:

  pre_job:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(BRANCH=${GITHUB_REF#refs/heads/}; echo ${BRANCH//\//-})"
      - name: Current date as tag
        id: today
        shell: bash
        run: echo "::set-output name=today::$(date -I)"

  main:
    runs-on: ubuntu-latest
    needs: pre_job
    env:
      DOCKER_BUILDKIT: 1
      FQ_IMAGE: ${{ format('ghcr.io/arkivverket/sosicon:{0}-{1}', needs.pre_job.outputs.branch, github.sha) }}
      ACR: ${{ format('arkivverket.azurecr.io/da-ssrsak-visning') }}
      IMAGE: ${{ github.event.repository.name }}
      TAG: ${{ needs.pre_job.outputs.today }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.FQ_IMAGE }}
      - name: Container scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.FQ_IMAGE }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Tag to ACR
        run: docker tag ${{ env.FQ_IMAGE }} ${ACR}/${IMAGE}:${TAG}
      - name: Login to ACR
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.ARKIVVERKET_AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.ARKIVVERKET_AZURE_REGISTRY_PASSWORD }}
          login-server: https://arkivverket.azurecr.io
      - name: Publish to ACR
        run: docker push ${ACR}/${IMAGE}:${TAG}
